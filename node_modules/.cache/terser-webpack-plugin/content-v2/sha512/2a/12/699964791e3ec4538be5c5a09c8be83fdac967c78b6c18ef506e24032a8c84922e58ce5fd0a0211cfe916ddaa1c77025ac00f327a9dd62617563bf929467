{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{540:function(s,t,a){\"use strict\";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"p\",[s._v(\"先复习一下什么是事件冒泡、事件捕获和事件默认行为\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"事件捕获\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件捕获\"}},[s._v(\"#\")]),s._v(\" 事件捕获\")]),s._v(\" \"),a(\"p\",[s._v(\"当鼠标点击或者触发dom事件时（被触发dom事件的这个元素被叫作事件源），浏览器会从根节点 ➡➡事件源（由外到内）进行事件传播。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"事件冒泡\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件冒泡\"}},[s._v(\"#\")]),s._v(\" 事件冒泡\")]),s._v(\" \"),a(\"p\",[s._v(\"事件源 ➡➡根节点（由内到外）进行事件传播。\")]),s._v(\" \"),a(\"p\",[s._v(\"无论是事件捕获还是事件冒泡，它们都有一个共同的行为，就是事件传播。\"),a(\"br\"),s._v(\"\\ndom标准事件流的触发的先后顺序为：先捕获再冒泡。即当触发dom事件时，会先进行事件捕获，捕获到事件源之后通过事件传播进行事件冒泡。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"事件默认行为\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件默认行为\"}},[s._v(\"#\")]),s._v(\" 事件默认行为\")]),s._v(\" \"),a(\"p\",[s._v(\"事件的默认行为就比如 a标签点击时会发生自动跳转，form表单点击提交按钮会自动上传数据\")]),s._v(\" \"),a(\"p\"),s._v(\" \"),a(\"h3\",{attrs:{id:\"vue-阻止事件冒泡、捕获、默认行为\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-阻止事件冒泡、捕获、默认行为\"}},[s._v(\"#\")]),s._v(\" Vue 阻止事件冒泡、捕获、默认行为\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[s._v(\"@click\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"stop\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'say()'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 阻止事件冒泡\")]),s._v(\"\\n\\n@click\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prevent \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 阻止事件默认行为\")]),s._v(\"\\n\\n@click\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"self\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'say()'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 事件只作用在元素本身，而不是其子元素\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}